<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbm5uAIOD
        gwB5eXkAc3NzAHd3dwCIiIgAeHh4AIGBgQCLi4sAj4+PAIODgwB8fHwAlZWVAHt7ewB8fHwAenp6AIWF
        hQCTk5MAiIiIAJCQkAB+fn4Ad3d3AICAgABzc3MAiYmJAKCgoACDg4MAdnZ2AHNzcwBzc3MAh4eHAI2N
        jQCQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAbW1tAIODgwV5eXkCcnJyDnd3dxKHh4cMdnZ2E319fQyHh4cJiYmJDoWFhQWCgoIClpaWCHh4
        eBF8fHwRe3t7BoiIiAWTk5MKkJCQApGRkQh7e3sQd3d3EX5+fg5ycnITiIiICbGxsQF/f38DdHR0E3Nz
        cw5vb28EhISEBouLiwKOjo4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACfn58Ab29vAIODgzp4eHgZdHR0a3h4eGCGhoZgf39/fISEhGWHh4dkh4eHaH5+
        fkx5eXkyj4+PaH19fXp7e3tad3d3RoODg0mQkJBkgYGBOIiIiF6IiIiFeXl5XYuLi3R2dnZVjIyMWZOT
        kx+KioopfX19f3R0dFJ4eHhBiIiIUouLiwuRkZEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTk5MAXFxcAI2NjVeOjo4ueXl5cICAgFKKiopAioqKk5OT
        k1GOjo5ij4+PKoCAgGd2dnZyiYmJkoaGhnx/f39Qfn5+YYODg3KNjY2Nenp6eYODg4OTk5OPe3t7U5mZ
        mXCjo6MMkJCQYoWFhWKIiIhxhoaGeXp6elCEhIRniIiIfoeHhxSIiIgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBgYEAgYGBFIGBgXaHh4dWenp6X4SE
        hFONjY0Wh4eHXpmZmQ+EhIRYgoKCYIqKikl/f38dkJCQUoCAgGmMjIxRhYWFZoKCgmuSkpJdiYmJIXt7
        e0GKiopwhoaGUpubm02srKwHh4eHToGBgXGFhYVXgoKCa35+fkd/f39shISEZoqKig+JiYkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABycnIAc3NzAmtr
        awZ0dHQFdXV1BHZ2dgagoKABxMXFA5aOjgBvb28BeHh4AwAAAAB8fHwBioqKAWxsbAV9fX0Gf39/BHNz
        cwWZmZkBiIiIAXh4eAFubm4Eenp6Bp6engLcko0AHUdLAXJycgaNjY0BcXFxBnJycgVtbW0FfX19BFJS
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUQCAAAAAAAABAAAAAAAAAFEAgAAA
        AAAAAQAAAAAAAAABAAAAAAAACAhACABAAAAICEAIAEAAAAAAAAAAAAAACAAAAABAAAAIAAAAAEAAAAgA
        AAAAQAAACAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAgAAAAAQAAACAAAAABA
        AAAAAAAACEAAAAAAAAAIAAAACAAAAABAAAAAAAAAAAAAAAgAAAAAQAAACAAAAABAAAAIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAQIAAAACAhACABAAAAAQACAQAAAAAAAAAQAAAAAGABACEBA
        AAA=
</value>
  </data>
</root>